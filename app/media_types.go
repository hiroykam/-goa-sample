// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "goa-sample": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/hiroykam/goa-sample/design
// --out=$(GOPATH)/src/github.com/hiroykam/goa-sample
// --version=v1.3.1

package app

import (
	"github.com/goadesign/goa"
	"time"
)

// Auth result (default view)
//
// Identifier: application/vnd.auth+json; view=default
type Auth struct {
	Token *Token `form:"token" json:"token" yaml:"token" xml:"token"`
}

// Validate validates the Auth media type instance.
func (mt *Auth) Validate() (err error) {
	if mt.Token == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "token"))
	}
	if mt.Token != nil {
		if err2 := mt.Token.Validate(); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// sample detail (default view)
//
// Identifier: application/vnd.sample+json; view=default
type Sample struct {
	// 作成日
	CreatedAt time.Time `form:"created_at" json:"created_at" yaml:"created_at" xml:"created_at"`
	// 詳細
	Detail string `form:"detail" json:"detail" yaml:"detail" xml:"detail"`
	// sample id
	ID int `form:"id" json:"id" yaml:"id" xml:"id"`
	// 名前
	Name string `form:"name" json:"name" yaml:"name" xml:"name"`
	// 更新日
	UpdatedAt time.Time `form:"updated_at" json:"updated_at" yaml:"updated_at" xml:"updated_at"`
	// user id
	UserID int `form:"user_id" json:"user_id" yaml:"user_id" xml:"user_id"`
}

// Validate validates the Sample media type instance.
func (mt *Sample) Validate() (err error) {

	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	if mt.Detail == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "detail"))
	}

	return
}

// sample list (default view)
//
// Identifier: application/vnd.samples+json; view=default
type Samples struct {
	// 作成日
	CreatedAt time.Time `form:"created_at" json:"created_at" yaml:"created_at" xml:"created_at"`
	// id
	ID int `form:"id" json:"id" yaml:"id" xml:"id"`
	// 名前
	Name string `form:"name" json:"name" yaml:"name" xml:"name"`
	// 更新日
	UpdatedAt time.Time `form:"updated_at" json:"updated_at" yaml:"updated_at" xml:"updated_at"`
}

// Validate validates the Samples media type instance.
func (mt *Samples) Validate() (err error) {

	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}

	return
}

// SamplesCollection is the media type for an array of Samples (default view)
//
// Identifier: application/vnd.samples+json; type=collection; view=default
type SamplesCollection []*Samples

// Validate validates the SamplesCollection media type instance.
func (mt SamplesCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// token (default view)
//
// Identifier: application/vnd.token+json; view=default
type Token struct {
	// 期限
	ExpiredAt time.Time `form:"expired_at" json:"expired_at" yaml:"expired_at" xml:"expired_at"`
	// token value
	Token string `form:"token" json:"token" yaml:"token" xml:"token"`
}

// Validate validates the Token media type instance.
func (mt *Token) Validate() (err error) {
	if mt.Token == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "token"))
	}

	return
}
